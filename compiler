#! /bin/bash

# a script to compile whatever file I want

file=$(readlink -f "$1")
dir=$(dirname "$file")
base="${file%.*}"

compile_tex()
{
    file=$1
    dir=$(dirname "$file")
    base="${file%.*}"

	command="pdflatex"
	( sed 5q "$file" | grep -i -q 'xelatex' ) && command="xelatex"
	$command --output-directory="$dir" "$base" &&
	grep -i addbibresource "$file" >/dev/null &&
	biber --input-directory "$dir" "$base" &&
	$command --output-directory="$dir" "$base" &&
	$command --output-directory="$dir" "$base"
    return 0;
}

run_makefile()
{
    cmake .; make "$base" || make all || make
}

refresh_mupdf()
{
    killall -SIGHUP mupdf
}

compile()
{
    case "$file" in
        *\.c) run_makefile || gcc -o "$base" "$file" ;;
        *\.cc) run_makefile || g++ -o "$base" "$file" ;;
        *\.cpp) run_makefile || g++ -o "$base" "$file" ;;
        *\.h) run_makefile ;;
        *\.hpp) run_makefile ;;
        CMakeLists.txt) run_makefile ;;
        *\.rmd) echo "require(rmarkdown); render('$file', output_format='all')" | R -q --vanilla && refresh_mupdf ;;
        *\.Rmd) echo "require(rmarkdown); render('$file', output_format='all')" | R -q --vanilla && refresh_mupdf ;;
        *\.md) pandoc --biblatex --listings -s -o "$base".tex "$file" && compile_tex "$base".tex && refresh_mupdf ;;
        *\.tex) compile_tex "$file" && refresh_mupdf;;
        *\.ts) tsc *.ts ;;
        *) exit ;;
    esac
}


# if we can't find the directory, get out
cd "$dir" || exit

compile
